{"ast":null,"code":"var _jsxFileName = \"/home/mahmudul/fullstack/myapp/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      articles: [],\n      error: null\n    };\n  }\n\n  fetchArticles() {\n    fetch(\"http://localhost:8000/api/articles/\").then(response => response.json()).then(data => this.setState({\n      articles: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  render() {\n    const {\n      isLoading,\n      articles,\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: articles.map(article => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [article.title, \" \", article.author]\n        }, article.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mahmudul/fullstack/myapp/src/App.js"],"names":["React","App","Component","constructor","props","state","isLoading","articles","error","fetchArticles","fetch","then","response","json","data","setState","catch","componentDidMount","render","message","map","article","title","author","id"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAMhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SALnBC,KAKmB,GALX;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAKW;AAElB;;AACDC,EAAAA,aAAa,GAAG;AACdC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CAA6CC,IAA7C,CAAkDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA9D,EACCF,IADD,CACMG,IAAI,IACV,KAAKC,QAAL,CAAc;AACZR,MAAAA,QAAQ,EAAEO,IADE;AAEZR,MAAAA,SAAS,EAAE;AAFC,KAAd,CAFA,EAMEU,KANF,CAMQR,KAAK,IAAI,KAAKO,QAAL,CAAc;AAAEP,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CANjB;AAOD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,aAAL;AACD;;AACDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,QAAiC,KAAKH,KAA5C;;AACA,QAAGG,KAAH,EAAU;AACR,0BAAO;AAAA,8BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEM,IAAG,CAACb,SAAJ,EAAe;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFK,MAGJ,oBACE;AAAA,6BACE;AAAA,kBACGC,QAAQ,CAACa,GAAT,CAAaC,OAAO,iBACnB;AAAA,qBACGA,OAAO,CAACC,KADX,OACmBD,OAAO,CAACE,MAD3B;AAAA,WAASF,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWH;;AAxC+B;;AA4ClC,eAAevB,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  state = {\n    isLoading: false,\n    articles: [],\n    error: null\n  };\n  constructor(props) {\n    super(props);\n  }\n  fetchArticles() {\n    fetch(\"http://localhost:8000/api/articles/\").then(response => response.json())\n    .then(data =>\n    this.setState({\n      articles: data,\n      isLoading: false,\n    })\n    ).catch(error => this.setState({ error, isLoading: false}));\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n  render() {\n    const { isLoading, articles, error } = this.state;\n    if(error) {\n      return <div>Error: {error.message}</div>;\n    }else if(!isLoading) {\n      return <div>Loading...</div>;\n    }else\n      return (\n        <div>\n          <ul>\n            {articles.map(article  => (\n              <li key={article.id}>\n                {article.title} {article.author}\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}