{"ast":null,"code":"import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      articles: [],\n      error: null\n    };\n  }\n\n  fetchArticles() {\n    fetch(\"http://localhost:8000/api/articles/\").then(response => response.json()).then(data => this.setState({\n      articles: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  render() {\n    const {\n      isLoading,\n      articles,\n      error\n    } = this.state;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mahmudul/fullstack/myapp/src/App.js"],"names":["React","App","Component","state","isLoading","articles","error","fetchArticles","fetch","then","response","json","data","setState","catch","componentDidMount","render"],"mappings":"AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAFwB;AAAA;;AAQhCC,EAAAA,aAAa,GAAG;AACdC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CAA6CC,IAA7C,CAAkDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA9D,EACCF,IADD,CACMG,IAAI,IACV,KAAKC,QAAL,CAAc;AACZR,MAAAA,QAAQ,EAAEO,IADE;AAEZR,MAAAA,SAAS,EAAE;AAFC,KAAd,CAFA,EAMEU,KANF,CAMQR,KAAK,IAAI,KAAKO,QAAL,CAAc;AAAEP,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CANjB;AAOD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,aAAL;AACD;;AACDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,QAAiC,KAAKH,KAA5C;AAED;;AAxB+B;;AA4BlC,eAAeF,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n\n  state = {\n    isLoading: false,\n    articles: [],\n    error: null\n  };\n\n  fetchArticles() {\n    fetch(\"http://localhost:8000/api/articles/\").then(response => response.json())\n    .then(data =>\n    this.setState({\n      articles: data,\n      isLoading: false,\n    })\n    ).catch(error => this.setState({ error, isLoading: false}));\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n  render() {\n    const { isLoading, articles, error } = this.state;\n    \n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}